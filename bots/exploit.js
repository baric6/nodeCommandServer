const request = require('request')
const cheerio = require('cheerio')
const express = require('express')
const schedule = require('node-schedule')
const firebaseAdmin = require('firebase-admin')

const fs = require('fs');
const logFilePath = 'logs/exploit.log';
function writeToLogFile(message) {
    const timestamp = new Date().toLocaleString();
    const logMessage = `${timestamp}: ${message}\n`;
  
    fs.appendFile(logFilePath, logMessage, (err) => {
      if (err) {
        console.error('Error writing to log file:', err);
      }
    });
}

const PORT = process.env.PORT || 5002
const app = express()
const run = app.listen(PORT, () => {
    console.log("Server is listening to port " + PORT)
})

var getHtmldata = ((webpage) =>{
    preappendUrl = "https://packetstormsecurity.com"
        request(webpage, 
            (err, res, htmlData)=>{
                console.log(res.statusCode)
                if(!err && res.statusCode == 200){

                    const $ = cheerio.load(htmlData)
                    $('.file').each((i, el) => {
                        const exploitQuickDis = $(el)
                            .find('dt')
                            .text();
                        //console.log(exploitQuickDis+'\n')
                        
                        const exploitLink = $(el)
                            .find('dt')
                            .find('a')
                            .attr("href")
                        //console.log(exploitLink+'\n')

                        const exploitDate = $(el)
                            .find('.datetime')
                            .text();
                        let date = exploitDate.replace("Posted", "")
                        //console.log(date+'\n')

                        const exploitTag = $(el)
                            .find('.tags')
                            .text();
                        let tagSpl = exploitTag.split("|")
                        //console.log(tagSpl)

                        exploitDefaultName = "N/A"
                        const exploit = $(el)
                            .find('.cve')
                            .text();
                        if(exploit != ""){
                            let exploitSpl = exploit.split("|")
                            exploitDefaultName = exploitSpl[1]
                            writeToLogFile(exploitDefaultName+'\n')
                        }
                        
                        const exploitDlUrl = $(el)
                            .find('.act-links')
                            .find("a")
                            .attr("href")
                        //console.log(exploitDlUrl+'\n')
                        
                        const exploitMd5 = $(el)
                            .find('.md5')
                            .find("code")
                            .text()
                        c//onsole.log(exploitMd5+'\n')
                        
                        const exploitDetail = $(el)
                            .find('.detail')
                            .text()
                        //console.log(exploitDetail+'\n')

                        //saveToFirebase(cveQuickDis, preappendUrl + cveLink, date, tagSpl[1] ,cveNum, preappendUrl + dlUrl, cveDetail, cveMd5)
                        saveToFirebase(exploitQuickDis, 
                            preappendUrl+exploitLink, 
                            exploitDate, tagSpl[1], 
                            exploitDefaultName, 
                            preappendUrl+exploitDlUrl, 
                            exploitDetail, 
                            exploitMd5)
                       
                        //console.log('--------------------------\n')
                    })
                    writeToLogFile('server3 wrote exploit data');
                    
                }
                else{
                    console.log('errored out')
                    writeToLogFile('server3 errored out');
                }
        })
})

// since this is a absolute path need to change when i put on my server
var serviceAccount = require("<path to json firebase auth>");
firebaseAdmin.initializeApp({
    credential: firebaseAdmin.credential.cert(serviceAccount),
    databaseURL: "<enter firbase db link>"
});

// i changed the vars no cve whatever exists 
var saveToFirebase = ((exploitquickDis, exploitLink, exploitDate, tags, exploitdfaultname, exploitDlLink, exploitDetail, exploitMd5)=>{
    var db = firebaseAdmin.database()
    var ref = db.ref("<path to database in firebase>");
    //saveToFirebase(cveQuickDis, preappendUrl + cveLink, date, tagSpl2,cveNum, preappendUrl + dlUrl)

    let exploitName = downloadCve.split("/")
    let c = exploitName.pop().split(".")

    if(cveNum == "N/A"){
        const cveRef = ref.child(c[0]);
        cveRef.set({
            exploit: {
                exploitName: exploitdfaultname,
                exploitDis: exploitDetail,
                exploitDate: exploitDate,
                exploitUrl: exploitLink,
                exploitTags: tags,
                exploitQuickDis: exploitquickDis,
                exploitDLurl: exploitDlLink,
                exploit: exploitMd5
    
    
            }}, 
            function(error){
                if(error){
                    writeToLogFile(error)
                    writeToLogFile("broke at " + exploitMd5)
                }
                else{
                    writeToLogFile(exploitMd5 + " has been saved to firebase")
                }
            }    
        )    
    }
    else{
        const cveRef = ref.child(exploitdfaultname);
        cveRef.set({
            exploit: {
                exploitName: exploitdfaultname,
                exploitDis: exploitDetail,
                exploitDate: exploitDate,
                exploitUrl: exploitLink,
                exploitTags: tags,
                exploitQuickDis: exploitquickDis,
                exploitDLurl: exploitDlLink,
                exploit: exploitMd5
    
    
            }}, 
            function(error){
                if(error){
                    writeToLogFile(error)
                    writeToLogFile("broke at " + exploitMd5)
                }
                else{
                    writeToLogFile(exploitName + " has been saved to firebase")
                }
            }    
        )    
    }
    
    

})

//uncomment when ready to put on a schedual
// runs every 8 hours of the day
// 0 */8 * * * 
// every second min
// */2 * * * *

//                             runs every 8 hours
const job = schedule.scheduleJob('* */8 * * *', function(){
    getHtmldata('https://packetstormsecurity.com/files/tags/exploit/')
    console.log("job ran: " + new Date().toLocaleString())
    writeToLogFile('server3 ran on'+new Date().toLocaleString());
  });


